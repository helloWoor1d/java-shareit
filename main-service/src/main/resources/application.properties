server.port=${SERVER_PORT:9090}
shareit.auth.service.url=${SHAREIT_AUTH_SERVICE_URL:http://localhost:9093}

logging.level.ru.practicum.shareit.*=debug

spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.sql.init.mode=always

logging.level.org.springframework.orm.jpa=INFO
logging.level.org.springframework.transaction=INFO
logging.level.org.springframework.transaction.interceptor=TRACE
logging.level.org.springframework.orm.jpa.JpaTransactionManager=DEBUG

spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.database=postgresql
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://127.0.0.1:5432/shareit}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:mira}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:password}

#yandex storage
aws.access-key=${AWS_ACCESS_KEY}
aws.secret-key=${AWS_SECRET_KEY}
aws.bucket=${AWS_BUCKET}
region=${AWS_REGION}
aws.endpoint=${AWS_ENDPOINT}

#spring security
keySetUri=${SHAREIT_KEY_SET_URI:${SHAREIT_AUTH_SERVICE_URL:http://localhost:9093}/oauth2/jwks}

#kafka
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9098}

#---
spring.config.activate.on-profile=ci,test
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:shareit
spring.datasource.username=test
spring.datasource.password=test

