CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name CHARACTER VARYING (500) NOT NULL,
    email CHARACTER VARYING (512) NOT NULL,
    password CHARACTER VARYING (120),
    role CHARACTER VARYING (100),
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT uq_user_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS requests (
    id BIGINT GENERATED ALWAYS AS IDENTITY,
    description TEXT,
    requestor_id BIGINT NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_requests
        PRIMARY KEY (id),
    CONSTRAINT fk_requests_requestor_id
        FOREIGN KEY (requestor_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS items (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    name CHARACTER VARYING (500) NOT NULL,
    description CHARACTER VARYING (512) NOT NULL,
    is_available BOOLEAN  NOT NULL,
    owner_id BIGINT NOT NULL,
    request_id BIGINT,
    image_url CHARACTER VARYING (500),
    CONSTRAINT pk_item PRIMARY KEY (id),
    CONSTRAINT fk_items_owner_id
        FOREIGN KEY (owner_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT fk_items_request_id
        FOREIGN KEY (request_id) REFERENCES requests (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS bookings (
    id BIGINT GENERATED ALWAYS AS IDENTITY,
    start_date TIMESTAMP WITHOUT TIME ZONE,
    end_date TIMESTAMP WITHOUT TIME ZONE,
    item_id BIGINT NOT NULL,
    booker_id BIGINT NOT NULL,
    status varchar(50),
    CONSTRAINT pk_bookings
        PRIMARY KEY (id),
    CONSTRAINT fk_bookings_item_id
        FOREIGN KEY (item_id) REFERENCES items (id) ON DELETE CASCADE,
    CONSTRAINT fk_bookings_booker_id
        FOREIGN KEY (booker_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comments (
    id BIGINT GENERATED ALWAYS AS IDENTITY,
    text TEXT,
    item_id BIGINT NOT NULL,
    author_id BIGINT NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_comments
        PRIMARY KEY (id),
    CONSTRAINT fk_comments_item_id
        FOREIGN KEY (item_id) REFERENCES items (id) ON DELETE CASCADE,
    CONSTRAINT fk_comments_author_id
        FOREIGN KEY (author_id) REFERENCES users (id) ON DELETE CASCADE
);
